---
import RelatedPosts from "@/components/RelatedPosts.astro";
import TableOfContents from "@/components/TOC/TableOfContents.astro";
import Code from "@/components/mdx/Code.astro";
import { getCollection } from "astro:content";
import BaseLayout from "src/layouts/BaseLayout.astro";

const posts = await getCollection("posts");

export async function getStaticPaths() {
  const posts = await getCollection("posts");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

const post = Astro.props;

// Похожие посты по тегам
const getRelatedPosts = (post: any) => {
  const relatedPosts = posts.filter(
    (p) =>
      p.slug !== post.slug &&
      p.data.tags.some((t) => post.data.tags.includes(t)),
  );
  return relatedPosts.slice(0, 3);
};

// Похожие посты по тегам - вывести relatedPosts
const relatedPosts = getRelatedPosts(post);
const { Content, headings } = await post.render();
---

<BaseLayout title={post.data.title} description={post.data.description}>
  <div class="mx-auto max-w-5xl px-5">
    {headings && headings.length > 0 && <TableOfContents {headings} />}
    <!-- prose-heading:max-w-3xl - для TOC чтобы не перекрывал -->
    <main
      class="md:prose-md prose prose-stone max-w-none lg:prose-lg prose-headings:max-w-[280px] md:prose-headings:max-w-full"
    >
      <Content components={{ pre: Code }} />
    </main>
    {relatedPosts.length > 0 && <RelatedPosts posts={relatedPosts} />}
  </div>
</BaseLayout>
